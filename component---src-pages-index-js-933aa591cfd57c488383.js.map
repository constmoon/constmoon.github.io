{"version":3,"sources":["webpack:///./src/components/progressbar.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["Range","props","className","style","width","percentage","ProgressBar","ProgressBarComponent","currentDate","Date","currentYear","getFullYear","diff","daysInYear","Math","floor","round","CalculatePercentage","IndexPage","title","keywords","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"iTAGMA,G,UAAQ,SAACC,GACb,OAAO,yBAAKC,UAAU,QAAQC,MAAO,CAAEC,MAAUH,EAAMI,WAAX,SAGxCC,EAAc,SAACL,GACnB,OACE,yBAAKC,UAAU,gBACb,kBAAC,EAAD,CAAOG,WAAYJ,EAAMI,eA8BhBE,EAbc,WAAO,IAAD,EAZP,WAC1B,IAAMC,EAAc,IAAIC,KAClBC,EAAcF,EAAYG,cAE1BC,EAAOJ,EADK,IAAIC,KAAKC,EAAa,EAAG,GAGrCG,EAAaC,KAAKC,MAAMH,EADlB,OAIZ,MAAO,CAACF,EAFWI,KAAKE,MAAOH,EAAa,IAAM,IAAO,IAAM,IAM7BI,GAA3BP,EAD0B,KACbL,EADa,KAGjC,OACE,oCACE,yBAAKH,UAAU,sBACb,kBAAC,EAAD,CAAaG,WAAYA,KAE3B,uBAAGH,UAAU,iBAAiBQ,EAA9B,OAA+CL,EAA/C,iBCvBSa,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,QAAD,4BAC5B,kBAAC,EAAD,S,4FCIJ,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAML,EAAS,EAATA,MAC9BM,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFJ,MAAOA,EACPU,cAAa,QAAUJ,EAAKE,aAAaR,MACzCK,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASZ,GAEX,CACEW,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-index-js-933aa591cfd57c488383.js","sourcesContent":["import React from \"react\";\nimport \"@styles/progressbar.scss\";\n\nconst Range = (props) => {\n  return <div className=\"range\" style={{ width: `${props.percentage}%` }} />\n};\n\nconst ProgressBar = (props) => {\n  return (\n    <div className=\"progress-bar\">\n      <Range percentage={props.percentage} />\n    </div>\n  );\n};\n\nconst CalculatePercentage = () => {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const startDate = new Date(currentYear, 0, 0);\n  const diff = currentDate - startDate;\n  const day = 1000 * 60 * 60 * 24;\n  const daysInYear = Math.floor(diff / day);\n  const percentage = Math.round((daysInYear / 365 * 100) * 10) / 10;\n\n  return [currentYear, percentage];\n};\n\nconst ProgressBarComponent = () => {\n  const [currentYear, percentage] = CalculatePercentage();\n\n  return (\n    <>\n      <div className=\"progress-container\">\n        <ProgressBar percentage={percentage} />\n      </div>\n      <p className=\"progress-info\">{currentYear} is {percentage}% complete.</p>\n    </>\n  );\n};\n\nexport default ProgressBarComponent;","import React from \"react\"\nimport Layout from \"@components/layout\"\nimport SEO from \"@components/seo\"\nimport ProgressBarComponent from \"@components/progressbar\";\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`jiwoo`, `constmoon`, `Jiwoo Kang`]}/>\n    <ProgressBarComponent />\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}